1. 字符串处理：从string.in文件里读入两个字符串，字符串除了数字还可能包括'-'、'E'、'e'、'.'，相加之后输出到文件string.out中，
如果是浮点型，要求用科学计数法表示（最多保留10个有效数字）。

输入示例:                       
34.56                                
2.45e2    

输出示例: 
2.7956e2 

2. 最大公约数：从number.in文件中读入n个数，求出这n个数的最小值、最大值以及它们两的最大公约数，输出到文件number.out中。
number.in 中第一行为n，接下来为n个大于零的整数。

输入示例:
3
4 8 6

输出示例:
4 8 4

3. 任务调度：从task.in文件中读入任务调度序列，输出n个任务适合的一种调度方式到task.out中。每行第一个表示前序任务，
括号中的任务为后序任务，只有在前序任务完成的情况下，后序任务才能开始。若后序为NULL则表示无后序任务。

输入示例:
Task0(Task1,Task2)
Task1(Task3)
Task2(NULL)
Task3(NULL)

输出示例:
Task0 Task1 Task3 Task2

4. 火车票订购：火车经过X站，火车的最大载客人数为m，有n个订票请求，请求订购从a站到b站的k张票，若能满足订购要求则输出1，否则输出0。
数据从ticket.in中输入，第一行有两个数字，分别是n，m。接下来有n行，每行三个数分别是a、b、k。结果输出到文件ticket.out中。

输入示例:
5 10
4 10 9
8 12 2
8 12 1
14 20 8
30 300 15

输出示例:
1
0
1
1
0

5. 最短路径：有n个城市和m条道路（n < 1000, m < 10000），每条道路有不同的长度，请找到从起点s到终点t的最短距离，
并且输出经过的城市的序号，如果有多条，输出字典序最小的那条；若从s到t没有路径，则输出“can't arrive”。
从文件road.in中读入数据，第一行有四个数，分别为n、m、s、t。接下来有m行，每行三个数，分别为两个城市的序号和相互之间的距离，
将结果输出结果到文件road.out中。

输入示例:
3 3 1 3
1 3 3
1 2 1
2 3 1

输出示例:
2
1 2 3