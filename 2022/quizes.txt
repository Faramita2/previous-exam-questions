1. 将10进制正整数转换为7进制的正整数。输入为给定的一个10进制数K(K<1000),计算它的7进制表达形式。如K=15时，输出为21。

2. 两有序数组中寻找中位数:假设有两个数组A和B，分别包含有m和n个整致，数组元素均按照递增顺序排列，请设计有效的算法确定两个数组中所有元素的中位数
(“有效”指让法的时间复杂度尽可能的低，“中位数”指集合中大小居中的那个数)，并给出相应的时间复杂度。
例如，算法输入数组A={1,2,3}，B={3,5}，则算法输出为3({1,2,3,3,5}的中位数);
若算法输入A={1,2,3}，B={2,4,5}，则算法输出为2和3({1,2,2,3,4,5}的中位数)。

3. 写代码返回一个英文句子中最长单词的字符个数，

4. 给定两个字符用str1和str2，请输出将str1转为str2的最少操作数，要求时间复杂度为O(log(MN))，其中M、N分别是两个字符串的长度。
可以对字符围进行3种操作:插入一个字符、删除一个字符、改一个字符。
字符串长度满足1<=n<=1000，字符串中只出现小写英文字母。

示例输入: nowcoder,new

示例输出: 6

示例说明:
"nowcoder"=>"newcoder"(将'o'替换为'e')，修改操作1次
"nowcoder"=>"new"(删除"coder”)，删除操作5次
