1. 一个合法的身份证号码前17个数字加1位校验码组成。校验码的计算规则如下：

首先对前17位数字加权求和，权重分配为：{7，9，10，5，8，4，2，1，6，3，7，9，10，5，8，4，2}；然后将计算的和对11取模得到值Z；最后按照以下关系对应Z值与校验码M的值：

Z：0 1 2 3 4 5 6 7 8 9 10
M：1 0 X 9 8 7 6 5 4 3 2
现给定一个身份证号，从标准输入读取，判断该身份证是否合理，如果合理输出"YES"，如果不合理输出"NO"。(该示例感觉不正确)

输入示例:
37070419881216001X
输出示例:
YES

2. 判断给定的数字是否可以拆分为两个2的幂的和的形式，如果可以输出拆分方案，不能输出"NO"。

输入示例:
5
输出示例:
5 = 2^0 + 2^2

输入示例:
7
输出示例:
NO

3. 给出前缀式，只有加减乘除，求结果。前缀式从文件pre.in中读取，将结果输出到标准输出中，题目保证输入的前缀式有效。

输入示例:
- + 1 * + 2 3 4 5
输出示例:
16

4. 求集合的所有划分，集合从文件set.in中读取，结果输出到标准输出中。

输入示例:
a b c
输出示例:
{{a,b,c}}
{{a,b},{c}}
{{a,c},{b}}
{{a},{b,c}}
{{a},{b},{c}}
注：输入 a b c 代表集合{a,b,c}

5. 给出一个二叉排序树的层次遍历，求从它的一个叶子结点到另一个叶子结点的路径，要求路径上经过结点的数值之和最大。二叉树的层次遍历序列从文件tree.in中读取，结点数值大于0，将结果输出到标准输出中。

输入示例:
25 15 40 5 20 30 50 10 35
输出示例:
165